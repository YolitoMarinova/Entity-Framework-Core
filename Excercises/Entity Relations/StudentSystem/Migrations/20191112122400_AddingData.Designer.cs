// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using P01_StudentSystem.Data;

namespace P01_StudentSystem.Migrations
{
    [DbContext(typeof(StudentSystemContext))]
    [Migration("20191112122400_AddingData")]
    partial class AddingData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("P01_StudentSystem.Data.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsUnicode(true);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("DATETIME2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(true);

                    b.Property<decimal>("Price")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("DATETIME2");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            Description = "Best Database Course",
                            EndDate = new DateTime(2020, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Database Basic",
                            Price = 260m,
                            StartDate = new DateTime(2019, 11, 12, 14, 23, 59, 584, DateTimeKind.Local).AddTicks(721)
                        },
                        new
                        {
                            CourseId = 2,
                            EndDate = new DateTime(2020, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Entity Framework Core",
                            Price = 360m,
                            StartDate = new DateTime(2019, 11, 12, 14, 23, 59, 587, DateTimeKind.Local).AddTicks(988)
                        },
                        new
                        {
                            CourseId = 3,
                            Description = "Курс за начинаещи",
                            EndDate = new DateTime(2019, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Programing Basics",
                            Price = 440m,
                            StartDate = new DateTime(2019, 7, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CourseId = 4,
                            EndDate = new DateTime(2020, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "C# Advances",
                            Price = 260m,
                            StartDate = new DateTime(2019, 11, 12, 14, 23, 59, 587, DateTimeKind.Local).AddTicks(1025)
                        },
                        new
                        {
                            CourseId = 5,
                            EndDate = new DateTime(2020, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "C# OOP",
                            Price = 260m,
                            StartDate = new DateTime(2019, 11, 12, 14, 23, 59, 587, DateTimeKind.Local).AddTicks(1031)
                        });
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Models.Homework", b =>
                {
                    b.Property<int>("HomeworkId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .IsUnicode(false);

                    b.Property<int>("ContentType");

                    b.Property<int>("CourseId");

                    b.Property<int>("StudentId");

                    b.Property<DateTime>("SubmissionTime")
                        .HasColumnType("DATETIME2");

                    b.HasKey("HomeworkId");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("HomeworkSubmissions");

                    b.HasData(
                        new
                        {
                            HomeworkId = 1,
                            Content = "blq blq",
                            ContentType = 2,
                            CourseId = 2,
                            StudentId = 1,
                            SubmissionTime = new DateTime(2019, 11, 12, 14, 23, 59, 590, DateTimeKind.Local).AddTicks(1223)
                        },
                        new
                        {
                            HomeworkId = 2,
                            Content = "blq blq",
                            ContentType = 2,
                            CourseId = 4,
                            StudentId = 1,
                            SubmissionTime = new DateTime(2019, 11, 12, 14, 23, 59, 590, DateTimeKind.Local).AddTicks(3261)
                        },
                        new
                        {
                            HomeworkId = 3,
                            Content = "Hubava domashna",
                            ContentType = 1,
                            CourseId = 5,
                            StudentId = 3,
                            SubmissionTime = new DateTime(2019, 11, 12, 14, 23, 59, 590, DateTimeKind.Local).AddTicks(3287)
                        },
                        new
                        {
                            HomeworkId = 4,
                            Content = "domashnata na Pesho",
                            ContentType = 2,
                            CourseId = 4,
                            StudentId = 2,
                            SubmissionTime = new DateTime(2019, 11, 12, 14, 23, 59, 590, DateTimeKind.Local).AddTicks(3292)
                        },
                        new
                        {
                            HomeworkId = 5,
                            Content = "blq blq",
                            ContentType = 2,
                            CourseId = 3,
                            StudentId = 5,
                            SubmissionTime = new DateTime(2019, 11, 12, 14, 23, 59, 590, DateTimeKind.Local).AddTicks(3296)
                        });
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Models.Resource", b =>
                {
                    b.Property<int>("ResourceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<int>("ResourceType");

                    b.Property<string>("Url")
                        .IsRequired()
                        .IsUnicode(false);

                    b.HasKey("ResourceId");

                    b.HasIndex("CourseId");

                    b.ToTable("Resources");

                    b.HasData(
                        new
                        {
                            ResourceId = 1,
                            CourseId = 1,
                            Name = "Db Resource",
                            ResourceType = 3,
                            Url = "http\\db.com"
                        },
                        new
                        {
                            ResourceId = 2,
                            CourseId = 4,
                            Name = "C# Advances Resource",
                            ResourceType = 2,
                            Url = "http\\advanced.com"
                        },
                        new
                        {
                            ResourceId = 3,
                            CourseId = 4,
                            Name = "C# OOP Resource",
                            ResourceType = 3,
                            Url = "http\\oop.com"
                        },
                        new
                        {
                            ResourceId = 4,
                            CourseId = 2,
                            Name = "Entity Framework",
                            ResourceType = 3,
                            Url = "http\\entityframework.com"
                        },
                        new
                        {
                            ResourceId = 5,
                            CourseId = 5,
                            Name = "Db Resource",
                            ResourceType = 3,
                            Url = "http\\db.com"
                        });
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Birthday");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true);

                    b.Property<string>("PhoneNumber")
                        .IsUnicode(false);

                    b.Property<DateTime>("RegisteredOn")
                        .HasColumnType("DATETIME2");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            Name = "Gosho",
                            PhoneNumber = "0879658989",
                            RegisteredOn = new DateTime(2019, 11, 12, 14, 23, 59, 593, DateTimeKind.Local).AddTicks(1465)
                        },
                        new
                        {
                            StudentId = 2,
                            Birthday = new DateTime(1996, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pesho",
                            PhoneNumber = "0879239989",
                            RegisteredOn = new DateTime(2019, 11, 12, 14, 23, 59, 593, DateTimeKind.Local).AddTicks(2307)
                        },
                        new
                        {
                            StudentId = 3,
                            Birthday = new DateTime(1998, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mariela",
                            PhoneNumber = "0896595969",
                            RegisteredOn = new DateTime(2019, 11, 12, 14, 23, 59, 593, DateTimeKind.Local).AddTicks(2325)
                        },
                        new
                        {
                            StudentId = 4,
                            Birthday = new DateTime(1978, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Maggaret",
                            PhoneNumber = "0896969866",
                            RegisteredOn = new DateTime(2019, 11, 12, 14, 23, 59, 593, DateTimeKind.Local).AddTicks(2330)
                        },
                        new
                        {
                            StudentId = 5,
                            Name = "Michael",
                            PhoneNumber = "0877758975",
                            RegisteredOn = new DateTime(2019, 11, 12, 14, 23, 59, 593, DateTimeKind.Local).AddTicks(2335)
                        });
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Models.StudentCourse", b =>
                {
                    b.Property<int>("StudentId");

                    b.Property<int>("CourseId");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("StudentCourses");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            CourseId = 1
                        },
                        new
                        {
                            StudentId = 2,
                            CourseId = 1
                        },
                        new
                        {
                            StudentId = 1,
                            CourseId = 2
                        },
                        new
                        {
                            StudentId = 5,
                            CourseId = 3
                        },
                        new
                        {
                            StudentId = 4,
                            CourseId = 3
                        });
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Models.Homework", b =>
                {
                    b.HasOne("P01_StudentSystem.Data.Models.Course", "Course")
                        .WithMany("HomeworkSubmissions")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("P01_StudentSystem.Data.Models.Student", "Student")
                        .WithMany("HomeworkSubmissions")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Models.Resource", b =>
                {
                    b.HasOne("P01_StudentSystem.Data.Models.Course", "Course")
                        .WithMany("Resources")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Models.StudentCourse", b =>
                {
                    b.HasOne("P01_StudentSystem.Data.Models.Course", "Course")
                        .WithMany("StudentsEnrolled")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("P01_StudentSystem.Data.Models.Student", "Student")
                        .WithMany("CourseEnrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
